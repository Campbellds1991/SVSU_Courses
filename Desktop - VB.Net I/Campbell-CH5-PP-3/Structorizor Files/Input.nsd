<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:nsd="http://structorizer.fisch.lu/" text="&#34;INPUT()&#34;" comment="&#34;&#34;" color="ffffff" type="sub" style="nice">
	<children>
		<instruction text="&#34;Customer(0) &#60;- Name&#34;,&#34;Customer(1) &#60;- Address&#34;,&#34;Customer(2) &#60;- CSZ&#34;,&#34;CustHeader() &#60;- {&#34;&#34; Name&#34;&#34;, &#34;&#34;n Address&#34;&#34;, &#34;&#34; City, State, and Zip&#34;&#34;}&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
		<alternative text="&#34;If(IsNumeric(NoStove))&#34;" comment="&#34;&#34;" color="ffffff">
			<qTrue>
				<instruction text="&#34;OrderOut(0) &#60;- Integer.Parse(NoStove)&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
			</qTrue>
			<qFalse>
				<instruction text="&#34;OrderOut(0) &#60;- 0&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
			</qFalse>
		</alternative>
		<alternative text="&#34;If (IsNumeric(NoRefridge))&#34;" comment="&#34;&#34;" color="ffffff">
			<qTrue>
				<instruction text="&#34;OrderOut(1) &#60;- Integer.Parse(NoRefridge)&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
			</qTrue>
			<qFalse>
				<instruction text="&#34;OrderOut(1) &#60;- 0&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
			</qFalse>
		</alternative>
		<alternative text="&#34;If (IsNumeric(NoDishwasher))&#34;" comment="&#34;&#34;" color="ffffff">
			<qTrue>
				<instruction text="&#34;OrderOut(2) &#60;- Integer.Parse(NoDishwasher)&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
			</qTrue>
			<qFalse>
				<instruction text="&#34;OrderOut(2) &#60;- 0&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
			</qFalse>
		</alternative>
		<for text="&#34;For i &#60;- 0 To Customer.Length - 1&#34;" comment="&#34;&#34;" counterVar="i" startValue="0" endValue="Customer.Length - 1" stepConst="1" reliable="false" color="ffffff">
			<qFor>
				<alternative text="&#34;If (Customer(i).Equals(&#34;&#34;&#34;&#34;))&#34;" comment="&#34;&#34;" color="ffffff">
					<qTrue>
						<instruction text="&#34;Customer(i) &#60;- InputBox(&#34;&#34;Please Enter a&#34;&#34; + CustHeader(i), &#34;&#34;Invalid Data&#34;&#34;)&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
					</qTrue>
					<qFalse>
						<instruction text="&#34; &#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
					</qFalse>
				</alternative>
			</qFor>
		</for>
		<for text="&#34;For j &#60;- 0 To OrderOut.Length - 1&#34;" comment="&#34;&#34;" counterVar="j" startValue="0" endValue="OrderOut.Length - 1" stepConst="1" reliable="false" color="ffffff">
			<qFor>
				<alternative text="&#34;If (OrderOut(j).Equals(&#34;&#34;&#34;&#34;) Or OrderOut(j) &#60; 1)&#34;" comment="&#34;&#34;" color="ffffff">
					<qTrue>
						<instruction text="&#34;OrderOut(j) &#60;- 0&#34;" comment="&#34;&#34;" color="ffffff" rotated="0"></instruction>
					</qTrue>
					<qFalse>
					</qFalse>
				</alternative>
			</qFor>
		</for>
	</children>
</root>